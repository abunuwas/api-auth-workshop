"""Add constraints

Revision ID: 376749772d8c
Revises: f9789a0078f6
Create Date: 2022-08-01 10:04:06.194829

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '376749772d8c'
down_revision = 'f9789a0078f6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('currency', schema=None) as batch_op:
        batch_op.create_unique_constraint('currency_name_symbol_constraint', ['name', 'symbol'])

    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.alter_column('hirer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('recruiter_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.create_unique_constraint('city_country_constraint', ['city', 'country'])

    with op.batch_alter_table('skill', schema=None) as batch_op:
        batch_op.create_unique_constraint('skill_name_constraint', ['name'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('skill', schema=None) as batch_op:
        batch_op.drop_constraint('skill_name_constraint', type_='unique')

    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_constraint('city_country_constraint', type_='unique')

    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.alter_column('recruiter_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('hirer_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('currency', schema=None) as batch_op:
        batch_op.drop_constraint('currency_name_symbol_constraint', type_='unique')

    # ### end Alembic commands ###
